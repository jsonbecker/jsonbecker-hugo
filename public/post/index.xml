<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on JSONBecker</title>
    <link>http://www.json.blog/post/index.xml</link>
    <description>Recent content in Posts on JSONBecker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Apr 2017 21:19:30 +0000</lastBuildDate>
    <atom:link href="http://www.json.blog/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Foreign Keys and assertr</title>
      <link>http://www.json.blog/2017/04/foreign-keys-and-assertr</link>
      <pubDate>Sun, 02 Apr 2017 21:19:30 +0000</pubDate>
      
      <guid>http://www.json.blog/2017/04/foreign-keys-and-assertr</guid>
      <description>

&lt;p&gt;I have been fascinated with assertive programming in R since &lt;a href=&#34;http://www.json.blog/2015/07/news-on-assertions-in-r&#34;&gt;this&lt;/a&gt; from 2015 &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:missing&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:missing&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. Tony Fischetti wrote a &lt;a href=&#34;http://www.onthelambda.com/2017/03/20/data-validation-with-the-assertr-package/&#34;&gt;great blog post&lt;/a&gt; to announce &lt;code&gt;assertr&lt;/code&gt; 2.0&amp;rsquo;s release on CRAN that really clarified the package&amp;rsquo;s design.&lt;/p&gt;

&lt;p&gt;UseRs often do crazy things that no sane developer in another language would do. Today I decided to build a way to check foreign key constraints in R to help me learn the &lt;code&gt;assertr&lt;/code&gt; package.&lt;/p&gt;

&lt;h2 id=&#34;what-do-you-mean-foreign-key-constraints&#34;&gt;What do you mean, foreign key constraints?&lt;/h2&gt;

&lt;p&gt;Well, in many ways this is an extension of my &lt;a href=&#34;http://www.json.blog/2016/12/a-gateway-drug-to-purrr&#34;&gt;last post&lt;/a&gt; on using &lt;code&gt;purrr::reduce&lt;/code&gt;. I have a set of data with codes (like FIPS codes, or user ids, etc) and I want to make sure that all of those codes are &amp;ldquo;real&amp;rdquo; codes (as in I have a defintion for that value). So I may have a FIPS code &lt;code&gt;data.frame&lt;/code&gt; with &lt;code&gt;fips_code&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; as the columns or a user &lt;code&gt;data.frame&lt;/code&gt; with columns &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;fname&lt;/code&gt;, &lt;code&gt;lname&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In a database, I might have a foreign key constraint on my table that just has codes so that I could not create a row that uses an &lt;code&gt;id&lt;/code&gt; or &lt;code&gt;code&lt;/code&gt; value or whatever that did not exist in my lookup table. Of course in R, our data is disconnected and non-relational. New users may exist in my dataset that weren&amp;rsquo;t there the last time I downloaded the &lt;code&gt;users&lt;/code&gt; table, for example.&lt;/p&gt;

&lt;h2 id=&#34;ok-so-these-are-just-collections-of-enumerated-values&#34;&gt;Ok, so these are just collections of enumerated values&lt;/h2&gt;

&lt;p&gt;Yup! That&amp;rsquo;s right! In some ways like R&amp;rsquo;s &lt;em&gt;beloved&lt;/em&gt; &lt;code&gt;factors&lt;/code&gt;, I want to have problems when my data contains values that don&amp;rsquo;t have a corresponding row in another &lt;code&gt;data.frame&lt;/code&gt;, just like trying to insert a value into a &lt;code&gt;factor&lt;/code&gt; that isn&amp;rsquo;t an existing level.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;assertr&lt;/code&gt; anticipates just this, with the &lt;code&gt;in_set&lt;/code&gt; helper. This way I can &lt;code&gt;assert&lt;/code&gt; that my data is in a defined set of values or get an error.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; my_df &amp;lt;- data.frame(x = c(0,1,1,2))
&amp;gt; assert(df, in_set(0,1), x)
Column &#39;x&#39; violates assertion &#39;in_set(0, 1)&#39; 1 time
  index value
1     4     2
Error: assertr stopped execution
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;please-don-t-stop&#34;&gt;Please Don&amp;rsquo;t stop()&lt;/h2&gt;

&lt;p&gt;By default, &lt;code&gt;assert&lt;/code&gt; raises an error with an incredibly helpful message. It tells you which column the assertion was on, what the assertion was, how many times that assertion failed, and then returns the column index and value of the failed cases.&lt;/p&gt;

&lt;p&gt;Even better, &lt;code&gt;assert&lt;/code&gt; has an argument for &lt;code&gt;error_fun&lt;/code&gt;, which, combined with some built in functions, can allow for all kinds of fun behavior when an assertion fails. What if, for example, I actually want to collect that error message for later and not have a hard stop if an assertion failed?&lt;/p&gt;

&lt;p&gt;By using &lt;code&gt;error_append&lt;/code&gt;, &lt;code&gt;assert&lt;/code&gt; will return the original &lt;code&gt;data.frame&lt;/code&gt; when there&amp;rsquo;s a failure with a special attribute called &lt;code&gt;assertr_errors&lt;/code&gt; that can be accessed later with all the information about failed assertions.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; my_df %&amp;lt;&amp;gt;%
+   assert(in_set(0,1), x, error_fun = error_append) %&amp;gt;%
+   verify(x == 1, error_fun = error_append)
&amp;gt; my_df
  x
1 0
2 1
3 1
4 2
&amp;gt; attr(my_df, &#39;assertr_errors&#39;)
[[1]]
Column &#39;x&#39; violates assertion &#39;in_set(0, 1)&#39; 1 time
  index value
1     4     2

[[2]]
Column &#39;x&#39; violates assertion &#39;in_set(0, 1)&#39; 1 time
  index value
1     4     2

[[3]]
verification [x == 1] failed! (2 failures)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(Ok I cheated there folks. I used &lt;code&gt;verify&lt;/code&gt;, a new function from &lt;code&gt;assertr&lt;/code&gt; and a bunch of &lt;code&gt;magrittr&lt;/code&gt; pipes like &lt;code&gt;%&amp;lt;&amp;gt;%&lt;/code&gt;)&lt;/p&gt;

&lt;h2 id=&#34;enough-with-the-toy-examples&#34;&gt;Enough with the toy examples&lt;/h2&gt;

&lt;p&gt;Ok, so here&amp;rsquo;s the code I wrote today. This started as a huge mess I ended up turning into two functions. First &lt;code&gt;is_valid_fk&lt;/code&gt; provides a straight forward way to get &lt;code&gt;TRUE&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt; on whether or not all of your codes/ids exist in a lookup &lt;code&gt;data.frame&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;is_valid_fk &amp;lt;- function(data, key, values,
                        error_fun = error_logical,
                        success_fun = success_logical){

  assert_(data, in_set(values), key,
          error_fun = error_fun, success_fun = success_fun)

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first argument &lt;code&gt;data&lt;/code&gt; is your &lt;code&gt;data.frame&lt;/code&gt;, the second argument &lt;code&gt;key&lt;/code&gt; is the foreign key column in &lt;code&gt;data&lt;/code&gt;, and &lt;code&gt;values&lt;/code&gt; are all valide values for &lt;code&gt;key&lt;/code&gt;. Defaulting the &lt;code&gt;error_fun&lt;/code&gt; and &lt;code&gt;success_fun&lt;/code&gt; to &lt;code&gt;*_logical&lt;/code&gt; means a single boolean is the expected response.&lt;/p&gt;

&lt;p&gt;But I don&amp;rsquo;t really want to do these one column at a time. I want to check if all of the foreign keys in a table are good to go. I also don&amp;rsquo;t want a boolean, I want to get back all the errors in a useable format. So I wrote &lt;code&gt;all_valid_fk&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s take it one bit at a time.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;all_valid_fk &amp;lt;- function(data, fk_list, id = &#39;code&#39;) {
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt; is the &lt;code&gt;data.frame&lt;/code&gt; we&amp;rsquo;re checking foreign keys in.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fk_list&lt;/code&gt; is a list of &lt;code&gt;data.frames&lt;/code&gt;. Each element is named for the &lt;code&gt;key&lt;/code&gt; that it looks up; each &lt;code&gt;data.frame&lt;/code&gt; contains the valid values for that &lt;code&gt;key&lt;/code&gt; named&amp;hellip;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id&lt;/code&gt;, the name of the column in each &lt;code&gt;data.frame&lt;/code&gt; in the list &lt;code&gt;fk_list&lt;/code&gt; that corresponds to the valid &lt;code&gt;keys&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;verify(data, do.call(has_all_names, as.list(names(fk_list))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Right away, I want to know if my data has all the values my &lt;code&gt;fk_list&lt;/code&gt; says it should. I have to do some &lt;code&gt;do.call&lt;/code&gt; magic because &lt;code&gt;has_all_names&lt;/code&gt; wants something like &lt;code&gt;has_all_names(&#39;this&#39;, &#39;that&#39;, &#39;the_other&#39;)&lt;/code&gt; not &lt;code&gt;has_all_names(c(&#39;this&#39;, &#39;that&#39;, &#39;the_other&#39;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The next part is where the magic happens.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;accumulated_errors &amp;lt;- map(names(fk_list),
                            ~ is_valid_fk(data,
                                          key = .x,
                                          values = fk_list[[.x]][[id]],
                                          error_fun = error_append,
                                          success_fun = success_continue)) %&amp;gt;%
                        map(attr, &#39;assertr_errors&#39;) %&amp;gt;%
                        reduce(append)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using &lt;code&gt;map&lt;/code&gt;, I am able to call &lt;code&gt;is_valid_fk&lt;/code&gt; on each of the columns in &lt;code&gt;data&lt;/code&gt; that have a corresponding lookup table in &lt;code&gt;fk_list&lt;/code&gt;. The valid values are &lt;code&gt;fk_list[[.x]][[id]]&lt;/code&gt;, where &lt;code&gt;.x&lt;/code&gt; is the name of the &lt;code&gt;data.frame&lt;/code&gt; in &lt;code&gt;fk_list&lt;/code&gt; (which corresponds to the name of the code we&amp;rsquo;re looking up in &lt;code&gt;data&lt;/code&gt; and exists for sure, thanks to that &lt;code&gt;verify&lt;/code&gt; call) and &lt;code&gt;id&lt;/code&gt; is the name of the key in that &lt;code&gt;data.frame&lt;/code&gt; as stated earlier. I&amp;rsquo;ve replaced &lt;code&gt;error_fun&lt;/code&gt; and &lt;code&gt;success_fun&lt;/code&gt; so that the code does not exist &lt;code&gt;map&lt;/code&gt; as soon there are any problems. Instead, the data is returned for each assertion with the error attribute if one exists. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:memory&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:memory&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; Immediately, &lt;code&gt;map&lt;/code&gt; is called on the resulting list of &lt;code&gt;data.frame&lt;/code&gt;s to collect the &lt;code&gt;assertr_errors&lt;/code&gt;, which are &lt;code&gt;reduce&lt;/code&gt;d using &lt;code&gt;append&lt;/code&gt; into a flattened list.&lt;/p&gt;

&lt;p&gt;If there are no errors accumulated, &lt;code&gt;accumulated_errors&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, and the function exits early.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if(is.null(accumulated_errors)) return(list())
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I could have stopped here and returned all the messages in &lt;code&gt;accumulated_errors&lt;/code&gt;. But I don&amp;rsquo;t like all that text, I want something neater to work with later. The structure I decided on was a list of &lt;code&gt;data.frame&lt;/code&gt;s, with each element named for the column with the failed foreign key assertion and the contents being the index and value that failed the constraint.&lt;/p&gt;

&lt;p&gt;By calling &lt;code&gt;str&lt;/code&gt; on &lt;code&gt;data.frame&lt;/code&gt;s returned by assertion, I was able to see that the &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; tables printed in the failed &lt;code&gt;assert&lt;/code&gt; messages are contained in &lt;code&gt;error_df&lt;/code&gt;. So next I extract each of those &lt;code&gt;data.frame&lt;/code&gt;s into a single list.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;reporter &amp;lt;- accumulated_errors %&amp;gt;%
            map(&#39;error_df&#39;) %&amp;gt;%
            map(~ map_df(.x, as.character)) # because factors suck
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;m almost done. I have no way of identifying which column created each of those &lt;code&gt;error_df&lt;/code&gt; in &lt;code&gt;reporter&lt;/code&gt;. So to name each element based on the column that failed the foreign key contraint, I have to extract data from the &lt;code&gt;message&lt;/code&gt; attribute. Here&amp;rsquo;s what I came up with.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;names(reporter) &amp;lt;- accumulated_errors %&amp;gt;%
                   map_chr(&#39;message&#39;) %&amp;gt;%
                   gsub(&amp;quot;^Column \&#39;([a-zA-Z]+)\&#39; .*$&amp;quot;, &#39;\\1&#39;, x = .)
reporter
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So let&amp;rsquo;s create some fake data and run &lt;code&gt;all_valid_fk&lt;/code&gt; to see the results:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; df &amp;lt;- data.frame(functions = c(&#39;1001&#39;,&#39;1002&#39;, &#39;3001&#39;, &#39;3002&#39;),
                   objects = c(&#39;100&#39;,&#39;102&#39;, &#39;103&#39;, &#39;139&#39;),
                   actuals = c(10000, 2431, 809, 50000),
                   stringsAsFactors = FALSE)

&amp;gt; chart &amp;lt;- list(functions = data.frame(code = c(&#39;1001&#39;, &#39;1002&#39;, &#39;3001&#39;),
                                       name = c(&#39;Foo&#39;, &#39;Bar&#39;, &#39;Baz&#39;),
                                       stringsAsFactors = FALSE),
                objects =   data.frame(code = c(&#39;100&#39;, &#39;102&#39;, &#39;103&#39;),
                                       name = c(&#39;Mom&#39;, &#39;Dad&#39;, &#39;Baby&#39;),
                                       stringsAsFactors = FALSE))
&amp;gt; all_valid_fk(data = df, fk_list = chart, id = &#39;code&#39;)
$functions
# A tibble: 1 × 2
  index value
  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
1     4  3002

$objects
# A tibble: 1 × 2
  index value
  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
1     4   139
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Beautiful!&lt;/p&gt;

&lt;p&gt;And here&amp;rsquo;s &lt;code&gt;all_valid_fk&lt;/code&gt; in one big chunk.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;all_valid_fk &amp;lt;- function(data, fk_list, id = &#39;code&#39;) {
  verify(data, do.call(has_all_names, as.list(names(fk_list))))

  accumulated_errors &amp;lt;- map(names(fk_list),
                            ~ is_valid_fk(data,
                                          key = .x,
                                          values = fk_list[[.x]][[id]],
                                          error_fun = error_append,
                                          success_fun = success_continue)) %&amp;gt;%
                        map(attr, &#39;assertr_errors&#39;) %&amp;gt;%
                        reduce(append)

  if(is.null(accumulated_errors)) return(list())

  reporter &amp;lt;- accumulated_errors %&amp;gt;%
              map(&#39;error_df&#39;) %&amp;gt;%
              map(~ map_df(.x, as.character))

  names(reporter) &amp;lt;- accumulated_errors %&amp;gt;%
                     map_chr(&#39;message&#39;) %&amp;gt;%
                     gsub(&amp;quot;^Column \&#39;([a-zA-Z]+)\&#39; .*$&amp;quot;, &#39;\\1&#39;, x = .)
  reporter
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:missing&#34;&gt;I appear to have forgotten to build link post types into my Hugo blog, so the missing link from that post is &lt;a href=&#34;http://4dpiecharts.com/2015/07/03/the-state-of-assertions-in-r/&#34;&gt;here&lt;/a&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:missing&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:memory&#34;&gt;I am a little concerned about memory here. Eight assertions would mean, at least briefly, eight copies of the same &lt;code&gt;data.frame&lt;/code&gt; copied here without the need for that actual data. There is probably a better way.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:memory&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Labeling Data with purrr</title>
      <link>http://www.json.blog/2017/03/labeling-data-with-purrr</link>
      <pubDate>Fri, 03 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2017/03/labeling-data-with-purrr</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a fun common task. I have a data set that has a bunch of codes like:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Abbr&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Alabama&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;AL&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;01&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Alaska&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;AK&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;02&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Arizona&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;AZ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;04&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Arkansas&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;AR&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;05&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;California&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;06&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Colorado&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;CO&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;08&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Connecticut&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;CT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;09&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Delaware&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;DE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;All of your data is labeled with the &lt;code&gt;code&lt;/code&gt; value. In this case, you want to do a &lt;code&gt;join&lt;/code&gt; so that you can use the actual names because it&amp;rsquo;s 2017 and we&amp;rsquo;re not animals.&lt;/p&gt;

&lt;p&gt;But what if your data, like the accounting data we deal with at &lt;a href=&#34;http://www.allovue.com&#34;&gt;Allovue&lt;/a&gt;, has lots of code fields. You probably either have one table that contains all of the look ups in &amp;ldquo;long&amp;rdquo; format, where there is a column that represents which column in your data the code is for like this:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;code&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;type&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;01&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;fips&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;Alabama&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;02&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;fips&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;Alaska&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Alternatively, you may have a lookup table per data element (so one called fips, one called account, one called function, etc).&lt;/p&gt;

&lt;p&gt;I bet most folks do the following in this scenario:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;account &amp;lt;- left_join(account, account_lookup)
account &amp;lt;- left_join(account, fips)

## Maybe this instead ##
account %&amp;lt;&amp;gt;%
  left_join(account_lookup) %&amp;gt;%
  left_join(fips)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I want to encourage you to do this a little different using &lt;code&gt;purrr&lt;/code&gt;. Here&amp;rsquo;s some annotated code that uses &lt;code&gt;reduce_right&lt;/code&gt; to make magic.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Load a directory of .csv files that has each of the lookup tables
lookups &amp;lt;- map(dir(&#39;data/lookups&#39;), read.csv, stringsAsFactors = FALSE)
# Alternatively if you have a single lookup table with code_type as your
# data attribute you&#39;re looking up
# lookups &amp;lt;- split(lookups, code_type)
lookups$real_data &amp;lt;- read.csv(&#39;data/real_data.csv&#39;, 
                              stringsAsFactors = FALSE)
real_data &amp;lt;- reduce_right(lookups, left_join)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Boom, now you went from data with attributes like &lt;code&gt;funds_code&lt;/code&gt;, &lt;code&gt;function_code&lt;/code&gt;, &lt;code&gt;state_code&lt;/code&gt; to data that also has &lt;code&gt;funds_name&lt;/code&gt;, &lt;code&gt;function_name&lt;/code&gt;, &lt;code&gt;state_name&lt;/code&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:namingconventions&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:namingconventions&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. What&amp;rsquo;s great is that this same code can be reused no matter how many fields require a hookup. I&amp;rsquo;m oftent dealing with accounting data where the accounts are defined by a different number of data fields, but my code doesn&amp;rsquo;t care at all.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:namingconventions&#34;&gt;My recommendation is to use consistent naming conventions like &lt;code&gt;_code&lt;/code&gt; and &lt;code&gt;_name&lt;/code&gt; so that knowing how to do the lookups is really straightforward. This is not unlike the convention with Microsoft SQL where the primary key of a table is named &lt;code&gt;Id&lt;/code&gt; and a foreign key to that table is named &lt;code&gt;TableNameId&lt;/code&gt;. Anything that helps you figure out how to put things together without thinking is worth it.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:namingconventions&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Contributing to vegalite</title>
      <link>http://www.json.blog/2017/03/contributing-to-vegalite</link>
      <pubDate>Thu, 02 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2017/03/contributing-to-vegalite</guid>
      <description>&lt;p&gt;One of my goals for 2017 is to contribute more to the R open source community. At the beginning of last year, I spent a little time helping to refactor &lt;a href=&#34;https://www.github.com/leeper/rio&#34;&gt;rio&lt;/a&gt;. It was one of the more rewarding things I did in all of 2016. It wasn&amp;rsquo;t a ton of work, and I feel like I gained a lot of confidence in writing R packages and using S3 methods. I wrote code that R users download and use thousands of times a month.&lt;/p&gt;

&lt;p&gt;I have been on the lookout for a Javascript powered interactive charting library since &lt;code&gt;ggvis&lt;/code&gt; was announced in 2014. But &lt;code&gt;ggvis&lt;/code&gt; seems to have stalled out in favor of other projects (for now) and the evolution of &lt;code&gt;rCharts&lt;/code&gt; into &lt;code&gt;htmlwidgets&lt;/code&gt; left me feeling like there were far too many options and no clear choices.&lt;/p&gt;

&lt;p&gt;What I was looking for was a plotting library to make clean, attractive graphics with tool tips that came with clear documentation and virtually no knowledge of Javascript required. Frankly, all of the &lt;code&gt;htmlwidgets&lt;/code&gt; stuff was very intimidating. From my vantage point skimming blog posts and watching stuff come by on Twitter, &lt;code&gt;htmlwidgets&lt;/code&gt;-based projects all felt very much directed at Javascript polyglots.&lt;/p&gt;

&lt;p&gt;Vega and Vega-Lite had a lot of the qualities I sought in a plotting library. Reading and writing JSON is very accessible compared to learning Javascript, especially with R&amp;rsquo;s excellent translation from lists to JSON. And although I know almost no Javascript, I found in both Vega and Vega-Lite easy to understand documents that felt a lot like building grammar of graphics &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:thegg&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:thegg&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; plots.&lt;/p&gt;

&lt;p&gt;So I decided to take the plunge&amp;ndash; there was a &lt;code&gt;vegalite&lt;/code&gt; &lt;a href=&#34;https://github.com/hrbrmstr/vegalite&#34;&gt;package&lt;/a&gt; and the examples didn&amp;rsquo;t look so bad. It was time to use my first &lt;code&gt;htmlwidgets&lt;/code&gt; package.&lt;/p&gt;

&lt;p&gt;Things went great. I had some simple data and I wanted to make a bar chart. I wrote:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;vegalite() %&amp;gt;%
add_data(my_df) %&amp;gt;%
encode_x(&#39;schools&#39;, type = &#39;nominal&#39;) %&amp;gt;%
encode_y(&#39;per_pupil&#39;, type = &#39;quantitative&#39;) %&amp;gt;%
mark_bar()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A bar chart was made! But then I wanted to use the font Lato, which is what we use at &lt;a href=&#34;http://www.allovue.com&#34;&gt;Allovue&lt;/a&gt;. No worries, Vega-Lite has a property called &lt;code&gt;titleFont&lt;/code&gt; for axes. So I went to do:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;vegalite() %&amp;gt;%
add_data(my_df) %&amp;gt;%
encode_x(&#39;schools&#39;, type = &#39;nominal&#39;) %&amp;gt;%
encode_y(&#39;per_pupil&#39;, type = &#39;quantitative&#39;) %&amp;gt;%
mark_bar() %&amp;gt;%
axis_x(titleFont = &#39;Lato&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bummer. It didn&amp;rsquo;t work. I almost stopped there, experiment over. But then I remembered my goal and I thought, maybe I need to learn to contribute to a package that is an &lt;code&gt;htmlwidget&lt;/code&gt; and not simply use an &lt;code&gt;htmlwidget&lt;/code&gt;-based package. I should at least &lt;em&gt;look&lt;/em&gt; at the code.&lt;/p&gt;

&lt;p&gt;What I found surprised me. Under the hood, all the R package does is build up lists. It makes so much sense&amp;ndash; pass JSON to Javascript to process and do what&amp;rsquo;s needed.&lt;/p&gt;

&lt;p&gt;So it turned out, &lt;code&gt;vegalite&lt;/code&gt; for R was a bit behind the current version of &lt;code&gt;vegalite&lt;/code&gt; and didn&amp;rsquo;t have the &lt;code&gt;titleFont&lt;/code&gt; property yet. And with that, I made my &lt;a href=&#34;https://github.com/hrbrmstr/vegalite/commit/8f4d4db057985bac4fc8c5743780b4746dd56c56&#34;&gt;first commit&lt;/a&gt;. All I had to do was update the function definition and add the new arguments to the axis data like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;if (!is.null(titleFont))    vl$x$encoding[[chnl]]$axis$titleFont &amp;lt;- titleFont
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But why stop there? I wanted to update all of &lt;code&gt;vegalite&lt;/code&gt; to use the newest available arguments. Doing so looked like a huge pain though. The original package author made these great functions like &lt;code&gt;axis_x&lt;/code&gt; and &lt;code&gt;axis_y&lt;/code&gt;. They both had the same arguments, the only difference was the &amp;ldquo;channel&amp;rdquo; was preset as &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt; based on which function was called. Problem was that all of the arguments, all of the assignments, and all of the documentation had to be copied twice. It was worse with &lt;code&gt;encode&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt; which had many, many functions that are similar or identical in their &amp;ldquo;signature&amp;rdquo;. No wonder the package was missing so many Vega-Lite features&amp;ndash; they were a total pain to add.&lt;/p&gt;

&lt;p&gt;So as a final step, I decided I would do a light refactor across the whole package. In each of the core functions, like &lt;code&gt;encode&lt;/code&gt; and &lt;code&gt;axis&lt;/code&gt;, I would write a single generic function like &lt;code&gt;encode_vl()&lt;/code&gt; that would hold all of the possible arguments for the &lt;a href=&#34;https://vega.github.io/vega-lite/docs/encoding.html&#34;&gt;encoding portion&lt;/a&gt; of Vega-Lite. Then the specific functions like &lt;code&gt;encode_x&lt;/code&gt; could become wrapper functions that internally call &lt;code&gt;encode_vl&lt;/code&gt; like so:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;encode_x &amp;lt;- function(vl, ...) {
  vl &amp;lt;- encode_vl(vl, chnl = &amp;quot;x&amp;quot;, ...)
  vl
}

encode_y &amp;lt;- function(vl, ...) {
  vl &amp;lt;- encode_vl(vl, chnl =&amp;quot;y&amp;quot;, ...)
  vl
}

encode_color &amp;lt;- function(vl, ...) {
  vl &amp;lt;- encode_vl(vl, chnl = &amp;quot;color&amp;quot;, ...)
  vl
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, in order to update the documentation and the arguments for &lt;code&gt;encoding&lt;/code&gt;, I just have to update the &lt;code&gt;encode_vl&lt;/code&gt; function. It&amp;rsquo;s a really nice demonstration, in my opinion, of the power of R&amp;rsquo;s &lt;code&gt;...&lt;/code&gt; syntax. All of the wrapper functions can just pass whatever additional arguments the caller wants to &lt;code&gt;encode_vl&lt;/code&gt; without having to explicitly list them each time.&lt;/p&gt;

&lt;p&gt;This greatly reduced duplication in the code and made it far easier to update &lt;code&gt;vegalite&lt;/code&gt; to the newest version of Vega-Lite, which I also decided to do.&lt;/p&gt;

&lt;p&gt;Now Vega-Lite itself is embarking on a 2.0 release that I have a feeling will have some pretty big changes in store. I&amp;rsquo;m not sure if I&amp;rsquo;ll be the one to update &lt;code&gt;vegalite&lt;/code&gt;&amp;ndash; in the end, I think that Vega-Lite is too simple for the visualizations I need to do&amp;ndash; but I am certain whoever does the update will have a much easier go of it now than they would have just over a month ago.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/hrbrmstr&#34;&gt;Bob Rudis&lt;/a&gt; for making &lt;code&gt;vegalite&lt;/code&gt; and giving me free range after a couple of commits to go hog-wild on his package!&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:thegg&#34;&gt;The &lt;code&gt;gg&lt;/code&gt; in &lt;code&gt;ggplot2&lt;/code&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:thegg&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>My confrontation with the mainstream</title>
      <link>http://www.json.blog/2017/02/my-confrontation-with-the-mainstream</link>
      <pubDate>Mon, 27 Feb 2017 13:02:58 +0000</pubDate>
      
      <guid>http://www.json.blog/2017/02/my-confrontation-with-the-mainstream</guid>
      <description>&lt;p&gt;You can check my &lt;a href=&#34;https://www.goodreads.com/user/show/5380958-jason&#34;&gt;Goodreads profile&lt;/a&gt;. I love science fiction and fantasy. And I know in 2017 and everyone has already observed the dominance of &amp;ldquo;geek culture&amp;rdquo;, with the dominance of Disney properties from Marvel and now Star Wars. Hell, &lt;a href=&#34;http://io9.gizmodo.com/suicide-squad-is-now-an-oscar-winning-movie-1792769922&#34;&gt;Suicide Squad won a goddamn Oscar&lt;/a&gt;.&lt;/p&gt;

&lt;div style= &#34;float:right;&#34;&gt;
  &lt;a href = &#34;#powell_best_selling&#34;&gt;   
      &lt;figure&gt;
          &lt;img src = &#34;/img/powell_best_selling.jpg&#34; height = &#34;800&#34;&gt;
          &lt;figcaption&gt; Powell&#39;s Best Selling Fiction, 2017-02-26&lt;/figcaption&gt;
      &lt;/figure&gt;
  &lt;/a&gt;
  &lt;a href=&#34;#_&#34; class=&#34;lightbox&#34; id = &#34;powell_best_selling&#34;&gt;
      &lt;figure&gt;
          &lt;img src = &#34;/img/powell_best_selling.jpg&#34;&gt;
          &lt;figcaption&gt;Powell&#39;s Best Selling Fiction, 2017-02-26&lt;/figcaption&gt;
      &lt;/figure&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;But I never felt like SFF was all that mainstream. SyFy might have made (and renewed) a TV series based on &lt;em&gt;The Magicians&lt;/em&gt;, but I still feel like the disaffected entitled shit that held onto his love of genre fiction too long when I crawl into bed and hide in speculative fiction (thank you Quentin, for so completely capturing what a shit I was at 14).&lt;/p&gt;

&lt;p&gt;Yesterday, I was confronted with the reality of SFF going mainstream at &lt;a href=&#34;http://www.powells.com&#34;&gt;Powell&amp;rsquo;s City of Books&lt;/a&gt;. I was fully unprepared to see the contents of their Best Selling Fiction shelf.&lt;/p&gt;

&lt;p&gt;By my count, at least 16 of the top 42 are SFF. &lt;em&gt;The Name of the Wind&lt;/em&gt;, &lt;em&gt;The Left Hand of Darkness&lt;/em&gt;, &lt;em&gt;The Fifth Season&lt;/em&gt;, &lt;em&gt;2312&lt;/em&gt;, and &lt;em&gt;Uprooted&lt;/em&gt; are some of the best books I&amp;rsquo;ve ready in the last four or five years. To think of these books as best sellers when they don&amp;rsquo;t have a TV show coming out (like &lt;em&gt;American Gods&lt;/em&gt;, &lt;em&gt;The Handmaid&amp;rsquo;s Tale&lt;/em&gt;, &lt;em&gt;The Man in the High Castle&lt;/em&gt;, and &lt;em&gt;The Magicians&lt;/em&gt;) and aren&amp;rsquo;t assigned in high school classrooms (&lt;em&gt;1984&lt;/em&gt;, &lt;em&gt;Slaughterhouse-Five&lt;/em&gt;) is just shocking. In my mind, these aren&amp;rsquo;t best sellers, they&amp;rsquo;re tiny nods between myself and other quiet bookshoppers that we are kin.&lt;/p&gt;

&lt;p&gt;I am not sad though. I am thrilled. I want to live in a world where I can just assume acquaintances are reading &lt;em&gt;The Fifth Season&lt;/em&gt; and &lt;em&gt;Uprooted&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Siri Won&#39;t Catch Alexa</title>
      <link>http://www.json.blog/2017/01/siri-wont-catch-alexa</link>
      <pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2017/01/siri-wont-catch-alexa</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;I just got an Amazon Echo and surprisingly, I really love it.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In one form or another, &lt;a href=&#34;https://www.macstories.net/reviews/astra-brings-amazons-alexa-voice-assistant-to-the-iphone/&#34;&gt;this story&lt;/a&gt; has repeated &lt;a href=&#34;https://sixcolors.com/post/2015/12/my-favorite-gadget-of-2015-the-amazon-echo/&#34;&gt;again&lt;/a&gt; and &lt;a href=&#34;https://twitter.com/marcoarment/status/715611484567511040&#34;&gt;again&lt;/a&gt; across the internet. So while the recent headline seemed to be &lt;a href=&#34;http://www.theverge.com/ces/2017/1/4/14169550/amazon-alexa-so-many-things-at-ces-2017&#34;&gt;&amp;ldquo;Amazon&amp;rsquo;s Alexa is everywhere at CES 2017&amp;rdquo;&lt;/a&gt;, it really feels like this year was the Amazon Alexa year.&lt;/p&gt;

&lt;p&gt;I have an Amazon Echo. I bought around a year ago during a sale as the buzz seemed to have peaked &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:peaked&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:peaked&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. My experience with the Amazon Echo has mostly been &amp;ldquo;I don&amp;rsquo;t get it.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I think I’m using the Echo wrong because despite what the whole internet is saying, it’s not doing much Siri doesn’t do.&lt;/p&gt;&amp;mdash; Jason Becker (@jsonbecker) &lt;a href=&#34;https://twitter.com/jsonbecker/status/736174308129705985&#34;&gt;May 27, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Month 3 of Echo ownership. I still use it for practically nothing.&lt;/p&gt;&amp;mdash; Jason Becker (@jsonbecker) &lt;a href=&#34;https://twitter.com/jsonbecker/status/747087351084683264&#34;&gt;June 26, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Apple Watch is doomed!&lt;br&gt;&lt;br&gt;But even my tepid explanations of what I like about mine are more complete than anything I could say about Echo&lt;/p&gt;&amp;mdash; Jason Becker (@jsonbecker) &lt;a href=&#34;https://twitter.com/jsonbecker/status/747087927247777793&#34;&gt;June 26, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The Echo was kind of fun with Philip&amp;rsquo;s Hue lights or for a timer or unit conversion in the kitchen from time to time, but not much else. I was not much of a Siri user, and it turned out I was not much of an Amazon Echo user.&lt;/p&gt;

&lt;p&gt;But I just bought and Echo Dot.&lt;/p&gt;

&lt;h2 id=&#34;homekit-and-siri-can-t-compete&#34;&gt;HomeKit and Siri Can&amp;rsquo;t Compete&lt;/h2&gt;

&lt;p&gt;Siri and HomeKit should be a match made in heaven, but if I say &amp;ldquo;Hey Siri, turn off the bedroom lights,&amp;rdquo; the most common response is &amp;ldquo;Sorry, I cannot find device &amp;lsquo;bedroom lights&amp;rsquo;.&amp;rdquo; I then repeat the same command and the lights go off. This literally has happened once in almost a year of Echo ownership, but it happened nearly every time with Siri.&lt;/p&gt;

&lt;p&gt;Apple is miserable at sharing &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:sharing&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:sharing&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, and that means that even if Siri worked perfectly, HomeKit is built on a bad model.&lt;/p&gt;

&lt;p&gt;My Philips Hue lights are HomeKit compatible. I use Family Sharing so that my partner Elsa can have access to all the apps I buy. Yet it took months to get the email to invite her to my home to send and work. And really, why should I have to invite someone to anything to turn on the lights in my home? Apple knows all about proximity, with it&amp;rsquo;s &lt;a href=&#34;http://appleinsider.com/articles/13/12/06/first-look-using-ibeacon-location-awareness-at-an-apple-store&#34;&gt;awesome use of iBeacons in its own stores&lt;/a&gt;. If being within reach of my light switches or thermostats were enough security to control my devices before, why is Apple making it so hard for people to access them via HomeKit? &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:security&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:security&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&#34;a-better-model-for-homekit&#34;&gt;A Better Model for HomeKit&lt;/h2&gt;

&lt;p&gt;HomeKit&amp;rsquo;s insistence that all devices have the same security profile and complex approval has meant that devices are rarely HomeKit compatible while everything is compatible with Alexa&amp;rsquo;s simple skills program.&lt;/p&gt;

&lt;p&gt;Imagine if the HomeKit app and excellent Control Center interface
&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:controlcenter&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:controlcenter&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; existed at the launch of HomeKit. Imagine if instead of a complex encryption setup that required new hardware, Apple had tiered security requirements, where door locks and video surveillance lay on one side with heavy security, but lights and thermostats lay on the other. Imagine if HomeKit sharing was a simple check box interface that the primary account with Family Sharing could click on and off. Imagine if controlling low security profile devices with Siri worked for anyone within a certain proximity using iBeacons.&lt;/p&gt;

&lt;p&gt;This is a world where Apple&amp;rsquo;s Phil Schiller &lt;a href=&#34;https://backchannel.com/phil-schiller-on-iphones-launch-how-it-changed-apple-and-why-it-will-keep-going-for-50-years-e4412ad2c8f5#.8jw6uh7fe&#34;&gt;is right&lt;/a&gt; that &amp;ldquo;having my iPhone with me&amp;rdquo; could provide a better experience than a device designed to live in one place.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s not the product we have. And even if Apple gets into the &amp;ldquo;tower with microphones plugged into a wall&amp;rdquo; game, I don&amp;rsquo;t see them producing an Echo Dot like product that makes sure your voice assistant is everywhere. My iPhone might be with me. I may be able to turn on and off the lights with my voice. But without something like iBeacons in the picture, if someone comes to stay in my guest room they&amp;rsquo;re back to using the switch on the wall. If a family member uses Android, they are out of luck. If I have a child under the age where a cell phone is appropriate, they are back to living in a dumb home. The inexpensive Echo Dot means you can sprinkle Alexa everywhere the devices you want to control are for anyone to interact with.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:privilege&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:privilege&#34;&gt;5&lt;/a&gt;&lt;/sup&gt; Apple doesn&amp;rsquo;t do inexpensive well.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not sure they can resolve the product decisions around HomeKit that make it less appealing to hardware manufacturers. Worse, some of Alexa&amp;rsquo;s best skills are entirely software. Alexa&amp;rsquo;s skills can seemingly shoot off requests to API endpoints all over the place. So instead of needing to buy a Logitech Harmony Hub with complex encryption and specialized SiriKit/HomeKit skills, and tight integration, my existing Harmony Hub that has an API used by Logitech&amp;rsquo;s own application supports Alexa skills. An Alexa skill can be built in a day. Apple is allergic to doing simple services like this well, even though the entire web runs on them.&lt;/p&gt;

&lt;h2 id=&#34;my-dot&#34;&gt;My Dot&lt;/h2&gt;

&lt;p&gt;Our new bedroom in Baltimore does not have recessed lighting much like our old bedroom. We&amp;rsquo;re using one of those inexpensive, black tower lamps in the bedroom. I don&amp;rsquo;t have a switch for the outlets in there. Philips doesn&amp;rsquo;t make any Hue bulbs that provides enough light to light the room with one lamp.&lt;/p&gt;

&lt;p&gt;I needed an instant way to get the light on and off. That&amp;rsquo;s when I remembered I had an old WeMo bought from before the days of HomeKit. I used that WeMo to have a simple nightly schedule (turn some lights on at sundown and off at midnight each night) and never really thought about it. The WeMo was perfect, and lo and behold, it works with Alexa. Our Echo is a bit far from the bedroom though, and I don&amp;rsquo;t want to shout across the house to turn off the lights.&lt;/p&gt;

&lt;p&gt;Not only was the inexpensive Echo Dot perfectly for sprinkling a little voice in the bedroom, it also meant our master bathroom can have Hue lights that are controlled with voice again. And, now I have a way to get Spotify onto my Kanto YU5 speakers in the bedroom without fussing with Bluetooth&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:dumpsterfire&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:dumpsterfire&#34;&gt;6&lt;/a&gt;&lt;/sup&gt; from my phone by just connecting an &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;8&lt;/sub&gt;&amp;rdquo; phono plug in permanently.&lt;/p&gt;

&lt;p&gt;Now we say &amp;ldquo;Alexa, turn on the bedroom light&amp;rdquo; and &amp;ldquo;Alexa, play Jazz for Sleep&amp;rdquo;. It&amp;rsquo;s great. It always works. If we had a guest bedroom with the same setup, anyone who stayed there would be able to use it just as easily. No wonder why the Wynn is &lt;a href=&#34;http://www.cnbc.com/2016/12/14/wynn-las-vegas-to-add-amazon-alexa-to-all-hotel-rooms.html&#34;&gt;putting Amazon Echo in their hotel&lt;/a&gt;. Apple literally can&amp;rsquo;t do that.&lt;/p&gt;

&lt;h2 id=&#34;whither-voice-control&#34;&gt;Whither Voice Control&lt;/h2&gt;

&lt;p&gt;Amazon, Apple, and Google seemed locked in a battle over voice &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:microsoft&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:microsoft&#34;&gt;7&lt;/a&gt;&lt;/sup&gt;. I can think of four main times I want to use voice:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Walking with headphones&lt;/li&gt;
&lt;li&gt;Driving in the car&lt;/li&gt;
&lt;li&gt;Cooking in the kitchen&lt;/li&gt;
&lt;li&gt;Sharing an interface to shared devices&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Phil Schiller, and by extension, Apple, the killer feature of Siri is you always have it. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:watch&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:watch&#34;&gt;8&lt;/a&gt;&lt;/sup&gt; In a &lt;a href=&#34;https://backchannel.com/phil-schiller-on-iphones-launch-how-it-changed-apple-and-why-it-will-keep-going-for-50-years-e4412ad2c8f5#.8jw6uh7fe&#34;&gt;recent interview&lt;/a&gt;, Schiller is quoted as saying:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Personally, I still think the best intelligent assistant is the one that’s with you all the time. Having my iPhone with me as the thing I speak to is better than something stuck in my kitchen or on a wall somewhere.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Apple AirPods are all about maximizing (1). Siri works pretty well when I&amp;rsquo;m out with the dogs and need a quick bit of information or to make a call. But the truth is, I don&amp;rsquo;t really need to learn a lot from Siri on those dog walks. When I&amp;rsquo;m out walking, Siri is better than pulling out my phone, but once I&amp;rsquo;ve got a podcast or music going I don&amp;rsquo;t really need anything from Siri in those moments.&lt;/p&gt;

&lt;p&gt;Driving is another great context for voice control. I can&amp;rsquo;t look much at a screen and shouldn&amp;rsquo;t anyway. Ignoring CarPlay, Apple&amp;rsquo;s real move here is Bluetooth interfaces, which places Siri in most cars. But again, what is my real use for voice control in this scenario? Reading SMS and iMessages makes for a cool demo, but not really something I need. Getting directions to a location by name is probably the best use here, but Apple&amp;rsquo;s location database is shit for this. Plus, most of the time I choose where I am going when I get in the car, when I can still use my screen and would prefer to. The most important use of voice control in the car is calling a contact, which Voice Control, the on-device precursor to Siri, did just fine. &lt;a href=&#34;http://www.geekwire.com/2016/ford-working-on-amazon-echo-integration-connecting-cars-to-homes/&#34;&gt;And now Alexa is entering the car space too&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While cooking, it is great to be able to set timers, convert measurement units, and change music or podcast while my hands are occupied. This is why so many people place their Amazon Echo in the kitchen&amp;ndash; it works great for these simple task. &amp;ldquo;Hey Siri&amp;rdquo; and a Bluetooth speaker is a terrible solution in comparison. In fact, one thing that the Amazon Echo has done is cause me to wear my headphones less while cooking or doing the dishes, since the Amazon Echo works better and doesn&amp;rsquo;t mean I can&amp;rsquo;t hear Elsa in the other room. This isn&amp;rsquo;t a killer feature though. Early adopters may be all about the $180 kitchen timer with a modest speaker, but the Echo won&amp;rsquo;t be a mass product if this is its best value proposition.&lt;/p&gt;

&lt;h2 id=&#34;shared-interface-to-shared-devices&#34;&gt;Shared Interface to Shared Devices&lt;/h2&gt;

&lt;p&gt;There is a reason why home automation is where the Echo shines. Our homes are full of technology: light switches, appliances, televisions and all the boxes that plug in them, and everyone who enters the home has cause to control them. We expect that basically all home technology is reasonably transparent to anyone inside. Everyone knows how to lock and unlock doors, turn on the TV, turn on and off lights, or adjust the thermostat. Home automation has long been a geek honey pot that angers every cohabitant and visitor, but voice control offers an interface as easy and common as a light switch.&lt;/p&gt;

&lt;p&gt;Home automation is the early adopter use case that reveals how and why voice control is a compelling user interface. Turning on the bedroom lights means saying &amp;ldquo;Alexa, turn on the bedroom lights.&amp;rdquo; There is no pause for Siri to be listening. There is no taking out my phone or lifting up my watch. There is no invite process. There is no worrying about guests being confused. Anyone inside my home has always been able to hit a light switch. Anyone inside my home can say &amp;ldquo;Alexa, turn on the living room lights.&amp;rdquo; That&amp;rsquo;s why Apple erred by not having a lower security, proximity based way to control HomeKit devices.&lt;/p&gt;

&lt;p&gt;Voice control is great because it provides a shared interface to devices that are shared by multiple people. Computers, smartphones, and really most screen-based interfaces that we use are the aberration, pushing toward and suggesting that technology is becoming more personal. The world we actually live in is filled with artifacts that are communal, and as computer and information technology grow to infuse into the material technologies of our lives, we need communal interfaces. Amazon is well positioned to be a part of this future, but I don&amp;rsquo;t think Apple has a shot with its existing product strategy.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:peaked&#34;&gt;It hadn&amp;rsquo;t.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:peaked&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:sharing&#34;&gt;We still don&amp;rsquo;t have multi-user iPads or iPhones. I have a new AppleTV, but all the TV app recommendations don&amp;rsquo;t work because two people watch TV. Unlike Netflix, we can&amp;rsquo;t have separate profiles. And the Apple Watch is billed as &lt;a href=&#34;http://www.apple.com/pr/library/2014/09/09Apple-Unveils-Apple-Watch-Apples-Most-Personal-Device-Ever.html&#34;&gt;their most personal device yet&lt;/a&gt;. Where Amazon moves into the world of ever-present, open communal interfaces, Apple is looking toward individual, private worlds.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:sharing&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:security&#34;&gt;Ok, here comes the critiques about how HomeKit can be used to open door locks or activate video surveillance, etc. Great&amp;ndash; those are cool uses of technology that also have mostly proximity based security but fine, I can see a case for heavy encryption and complex sharing setups for those devices. But the truth is, most of the &lt;a href=&#34;https://twitter.com/internetofshit&#34;&gt;internet of things&lt;/a&gt; aren&amp;rsquo;t these kinds of devices. A good product would easily scale to different security profiles.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:security&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:controlcenter&#34;&gt;An unconscionable amount of the time I see &amp;ldquo;No Response&amp;rdquo; in Control Center under my devices. Worse, I have to sit and wait for Apple to realize those devices are there because eventually they pop on. Instant interfaces matter, and they matter even more when trying to replace a light switch.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:controlcenter&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:privilege&#34;&gt;There&amp;rsquo;s probably a good critique about privilege here, assuming that you have multiple rooms that would need a separate assistant device. But I would like to remind you that we&amp;rsquo;re talking about spending hundreds of dollars on cylinders plugged into walls that you talk to to control things that cost 4x their traditional counterparts. For the foreseeable future, we are addressing a market of rich people and this technology will succeed or fail there long before we get to ubiquity. Plus, who cares what Apple has to say about any of this if we&amp;rsquo;re not talking about rich people? Apple&amp;rsquo;s market is rich people and that isn&amp;rsquo;t going to change. Affordable luxury is the brand and target, where affordable in the global scheme means fairly well off.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:privilege&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:dumpsterfire&#34;&gt;Bluetooth is a dumpster fire when you have two phones, two sets of wireless headphones, a Bluetooth speaker in the bathroom, a Bluetooth speaker in the bedroom, and a shared car with Bluetooth. All of these things will choose at various times to ~conveniently~ connect to whatever phone they want if you&amp;rsquo;re not diligent about powering things down all the time. Bluetooth audio is a shit experience.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:dumpsterfire&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:microsoft&#34;&gt;Cortana isn&amp;rsquo;t anywhere that matters, so it doesn&amp;rsquo;t matter yet.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:microsoft&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:watch&#34;&gt;Apple Watch is about extending Siri wherever you are, but I don&amp;rsquo;t use Siri on my Watch much, because it&amp;rsquo;s not great in any of those four contexts. If I can raise my hand I have hands and I&amp;rsquo;d rather use my phone.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:watch&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A Gateway Drug to purrr</title>
      <link>http://www.json.blog/2016/12/a-gateway-drug-to-purrr</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2016/12/a-gateway-drug-to-purrr</guid>
      <description>&lt;p&gt;A lot of the data I work with uses numeric codes rather than text to describe features of each record. For example, financial data often has a fund code that represents the account&amp;rsquo;s source of dollars and an object code that signals what is bought (e.g. salaries, benefits, supplies). This is a little like the &lt;code&gt;factor&lt;/code&gt; data type in &lt;code&gt;R&lt;/code&gt;, which to the frustration of many modern analysts is internally an integer that mapped to a character label (which is a level) with a fixed number of possible values.&lt;/p&gt;

&lt;p&gt;I am often looking at data stored like this:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;fund_code&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;object_code&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;debit&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;credit&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2121&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10000&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2122&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;with the labels stored in another set of tables:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;fund_code&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;fund_name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;General&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;object_code&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;object_name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2121&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Social Security&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2122&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Life Insurance&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Before &lt;code&gt;purrr&lt;/code&gt;, I might have done a series of &lt;code&gt;dplyr::left_join&lt;/code&gt; or &lt;code&gt;merge&lt;/code&gt; to combine these data sets and get the labels in the same &lt;code&gt;data.frame&lt;/code&gt; as my data.&lt;/p&gt;

&lt;p&gt;But no longer!&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I just used purrr:reduce_right with left_join and cackled with joy. &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&#34;&gt;#rstats&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jason Becker (@jsonbecker) &lt;a href=&#34;https://twitter.com/jsonbecker/status/813793775260733441&#34;&gt;December 27, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;Now, I can just create a &lt;code&gt;list&lt;/code&gt;, add all the data to it, and use &lt;code&gt;purrr:reduce&lt;/code&gt; to bring the data together. Incredibly convenient when up to 9 codes might exist for a single record!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Assume each code-name pairing is in a CSV file in a directory
data_codes &amp;lt;- lapply(dir(&#39;codes/are/here/&#39;, full.names = TRUE ), 
                     readr::read_csv)
data_codes$transactions &amp;lt;- readr::read_csv(&#39;my_main_data_table.csv&#39;)
transactions &amp;lt;- purrr:reduce_right(data_codes, dplyr::left_join)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Introducing json.blog</title>
      <link>http://www.json.blog/2016/12/introducing-jsonblog</link>
      <pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2016/12/introducing-jsonblog</guid>
      <description>&lt;p&gt;I have written a lot on the internet. This isn&amp;rsquo;t a surprise, I&amp;rsquo;ve been here since the mid-90s. But the truth is, most of what I write on the internet doesn&amp;rsquo;t make me proud. It hasn&amp;rsquo;t made the world any better. It certainly hasn&amp;rsquo;t made me feel any better. Most of this terrible writing is easy to associate with me, because a long time ago, I chose to use my real name as my online identity. Using my real name was supposed to make sure that I would stand by what I said, but the truth is that I am not always my better self on internet forums, Facebook, Twitter, or other places I get to write.&lt;/p&gt;

&lt;p&gt;My personal blog is a bit different. The writing I&amp;rsquo;ve done over the years at my own domains has been&amp;hellip; less embarrassing. I don&amp;rsquo;t mean to say that the quality of the writing is any better (it&amp;rsquo;s not); it&amp;rsquo;s just that the extra thought involved in opening up a text editor, writing something in Markdown, and taking the steps to post it has resulted in fewer emotional tirades. I do a much better job of deleting or never completing posts on my blog than I ever did writing somewhere someone else owned. It&amp;rsquo;s too bad the audience here is much smaller and harder to come by.&lt;/p&gt;

&lt;p&gt;My blog has always been a testing ground. It&amp;rsquo;s where I&amp;rsquo;ve learned how to use Wordpress, Pelican, and now Hugo. It&amp;rsquo;s been a place to think about templating, structure, CSS, shared hosting, Github pages, server management, nginx and the like. This is where I try different types of writing like link posts, lists, professional-ish informational posts, public versions of notes to myself, images, and more. This blog hasn&amp;rsquo;t had a topic or a format. I&amp;rsquo;m not convinced it ever will. For me, a self-hosted blog is meant to be a personal lab bench.&lt;/p&gt;

&lt;p&gt;I hope today I am starting what I consider to be the final version of this blog. I feel confident in the domain and name. I feel comfortable with Hugo and the flexiblility of my fully custom theme. I feel great about not having comments.&lt;/p&gt;

&lt;p&gt;The look and content will change many times again, but I feel good that from here forward I&amp;rsquo;ll be using and evolving &lt;a href=&#34;http://json.blog&#34;&gt;json.blog&lt;/a&gt;. This is my home on the web.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Songs in the Key of Allovue</title>
      <link>http://www.json.blog/2016/07/songs-in-the-key-of-allovue</link>
      <pubDate>Sat, 09 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2016/07/songs-in-the-key-of-allovue</guid>
      <description>&lt;p&gt;When I entered high school, video games were beginning to lose their appeal. So I sold my four video game systems and all their games at a garage sale and that money, plus some Chanukkah money, bought me my first guitar and amp. I had just tried joined a band as a singer with a couple of guys I knew from school. I didn&amp;rsquo;t know anything about playing guitar. In fact, it took me a while to figure out what distortion was and why I my guitar didn&amp;rsquo;t sound like Kris Roe from The Ataris.&lt;/p&gt;

&lt;p&gt;In the beginning, being in a band was rough. We had a lot of fun playing together, but just keeping time and making it all the way through a song was a slog. We had agreed I wouldn&amp;rsquo;t try playing guitar with the band until I had been playing at least three months, self-taught. But this was 2001 and I lived on Long Island and we were playing pop-punk, so it didn&amp;rsquo;t take too long to catch up. Soon I was writing music, actual original music. To this day, I don&amp;rsquo;t really enjoy playing other people&amp;rsquo;s music, because from the moment I picked up a guitar it was an instrument for creating new music with other people.&lt;/p&gt;

&lt;p&gt;Writing music was a kind of awful torture I was addicted to. For years, I was absorbing how music sounded. I used to listen so intently that I memorized whole compositions. I wanted to hear every strike of a kick drum, every open string ringing out, every tapped bass note, and every quiet piano layered in deep below the mix. But now that I was writing music, I became become obsessed with its construction. All the nuances I worked hard to hear in music took on a whole new layer of depth as I tried unravel how the song was made. I never heard music the same way again. But my appreciation for the craft of songwriting far exceeded the meager results a few months of having a stratocaster glued to my hands could produce. I would meet and practice with just one of the other members of the band for hours long writing sessions where we would struggle to create something good enough to bring to the rest of the guys and flesh out into a full song. But eventually, within a couple of years, we wrote about 15 songs, at least six or seven of which I was pretty proud of. It was so difficult to write those first songs. It took so many hours at home alone, then working hard with one or two other guys to write new parts and determine a structure, and then eventually months of practice with four guys sweating in a basement practicing the same music over and over again.&lt;/p&gt;

&lt;p&gt;I wanted so badly to write my song.&lt;/p&gt;

&lt;p&gt;Every band has one. Their song. The real one. The song that every musician who hears your album recognizes immediately as the song that trancends the talent of the individuals involved and is just plain better. It&amp;rsquo;s not the most complex song. It may not even be the most overtly emotional. It&amp;rsquo;s probably not your single. But it&amp;rsquo;s the song that stands out as a proud announcement to the people like me, the musicians who absorb every sound and experience the very structure of the music. Transcendent, to repeat myself, is really the best explanation for it. These are the songs that shook my soul, and I wanted to find mine.&lt;/p&gt;

&lt;p&gt;I never did write my song. I ended up quitting that first band after two and a half years and playing with a different set of guys for a bit over year chasing &amp;ldquo;my song&amp;rdquo;. I hoped a different writing experience with different musicians might help. Throughout college, I still played guitar all the time, but I never got comfortable writing without collaborators and I never found the right people to fulfill that role. Nowadays I pick up a guitar so rarely. I hear a phrase in a song I love and immediately know I can play it and sometimes get the urge to actually prove that to myself. Once a year, the foggy edges of a song appears in the distance, enticing me to chase it for a short while, and I record a small phrase to add to the library of forgotten riffs and lyrics.&lt;/p&gt;

&lt;p&gt;I still listen to music, though not as often and not really the same kinds anymore. And I still can&amp;rsquo;t listen the way I used to, the way it was before I picked up a guitar and tried singing into a microphone. That part of me is permanently broken in a way I expect only musicians can understand.&lt;/p&gt;

&lt;p&gt;I learned something important about myself in my time as a musician. When I&amp;rsquo;m chasing something I truly love, I don&amp;rsquo;t feelsome great pleasure. Writing music was about throwing myself into an agonizing chase for the impossible. It was the euphoria of the small accomplishments&amp;ndash; a good song performed on stage in front of a crowd that actually responds to your creation, or cracking how to transition from a verse to a chorus&amp;ndash; that kept me going. And it was the imprint on my life, mind and soul, that brought me true joy from being a musician as time went on.&lt;/p&gt;

&lt;p&gt;Working on product at Allovue feels like writing music. I have never done something this hard, but I do know what it is like to experience a profound &lt;em&gt;need&lt;/em&gt; so deeply. There are moments of real euphoria, like when a user describes their experience with Balance in a way so perfectly aligns with our vision that I triple check they are not a plant. And there are moments of agony, like almost every time I start to &amp;ldquo;listen&amp;rdquo; to our product and deconstruct it, and feel the weight of a decade&amp;rsquo;s worth of ideas on what our product needs to match the vision I have had since the first time Jess told me what she&amp;rsquo;s trying to do.&lt;/p&gt;

&lt;p&gt;It feels like for the first time, I just might be writing my song. The real one. And I&amp;rsquo;m terrified I&amp;rsquo;m not good enough or strong enough or just plain enough to see it through.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A note on sequels</title>
      <link>http://www.json.blog/2016/04/a-note-on-sequels</link>
      <pubDate>Sun, 24 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2016/04/a-note-on-sequels</guid>
      <description>&lt;p&gt;I read a lot of science fiction and fantasy, genres filled with long running book series. Until the last couple of years, I mostly avoided any series that wasn&amp;rsquo;t already complete. First, I don&amp;rsquo;t like truly “epic” sci-fi fantasy. On-going series without an end in sight, or series that go beyond roughly 3,000 to 4,000 pages never end well for me&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. I simply lose interest. Second, I worry that series won&amp;rsquo;t actually reach completion, either because the books are not successful enough or the author gets writer&amp;rsquo;s block&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;, or even just getting caught up in waiting way too long between books&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:3&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:3&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;. Third, I like to actually remember what happened, especially in the kind of complex stories I like to read.&lt;/p&gt;

&lt;p&gt;Some series do really well with sequels. I recently read through Kelly McCullough&amp;rsquo;s &lt;em&gt;Fallen Blade&lt;/em&gt; series, and although it is complete and I did read the books in succession, they always made a clear attempt to reintroduce everything about the novel and the necessary bits of past events. In fact, McCullough was so good at this , it was almost obnoxious to read the series all in one go&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:4&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:4&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;But other books seem to provide no help at all. And I am now deeply invested in several series that have not yet completed. Right now I&amp;rsquo;m finally reading &lt;em&gt;Poseidon&amp;rsquo;s Wake&lt;/em&gt;, the third and final novel in Alastair Reynolds&amp;rsquo; &lt;em&gt;Poseidon&amp;rsquo;s Children&lt;/em&gt; trilogy. Because it had been so long, I had forgotten critical parts of the earlier two novels that I enjoyed so much. Now, nearly 40% through the book and thoroughly engrossed, most of the key information has miraculously come back to me. But I found it difficult to get through the first 5% or so of the novel if for no other reason than I was trying to remember what was in *Blue Remembered Earth*and what was in Kim Stanley Robinson&amp;rsquo;s &lt;em&gt;2312&lt;/em&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5&#34;&gt;5&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;I must admit, I am often impressed with my own ability to recall details of a story I read years earlier when encountering a sequel, because I seem to remember far more of it than expected.  But I wonder, what must the editing process on a sequel be like? How do authors and editors decide what can be assumed and what cannot?&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;See &lt;em&gt;Wizard&amp;rsquo;s First Rule&lt;/em&gt;, &lt;em&gt;Dune&lt;/em&gt;, and &lt;em&gt;A Song of Ice and Fire&lt;/em&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;See Patrick Rothfuss.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:2&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;I think I really learned this waiting for the conclusion of &lt;em&gt;His Dark Materials&lt;/em&gt;, which felt like it took a goddamn life time.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:3&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;I assume these books must be geared toward young adults and that this impacted the “hand holding” involved in moving from book to book. I&amp;rsquo;m not sure if they&amp;rsquo;re considered YA fiction, but the writing certainly had that feel. Still, they were wonderfully fun quick reads. I read all six books from November 23rd through December 14th.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:4&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:5&#34;&gt;A novel I did not enjoy nearly as much, but which seemed to have very similar themes and setting and which I read three months prior to &lt;em&gt;Blue Remembered Earth&lt;/em&gt; and &lt;em&gt;On the Steel Breeze&lt;/em&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Returning to Tumblr</title>
      <link>http://www.json.blog/2015/07/returning-to-tumblr</link>
      <pubDate>Mon, 06 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2015/07/returning-to-tumblr</guid>
      <description>&lt;p&gt;I have had a &lt;a href=&#34;http://tumblr.jsonbecker.com&#34;&gt;Tumblr site&lt;/a&gt; for a long time but never knew what to do with it. What is Tumblr exactly? Is it a hosted blog? Is it a hosted blog for hipsters? Is it a social network? Why should I put content into Tumblr?&lt;/p&gt;

&lt;p&gt;I have this &lt;a href=&#34;http://blog.jsonbecker.com&#34;&gt;blog&lt;/a&gt;, but I barely use it. I don&amp;rsquo;t have a Facebook page, because I don&amp;rsquo;t trust Facebook and how it repeatedly changed and confused privacy settings and after college, I rarely found that Facebook was a net positive in my life. Recently I crossed &lt;em&gt;1000&lt;/em&gt; followers on Twitter.&lt;/p&gt;

&lt;p&gt;I like the sense of control offered by &lt;a href=&#34;http://blog.jsonbecker.com/2015/01/taking-control.html&#34;&gt;owning where I put content&lt;/a&gt;. But the barrier to posting a blog post has always felt high to me. A blog feels somewhat permanent. It&amp;rsquo;s something I want my current and future employers and friends to read it. It&amp;rsquo;s a record of ideas that felt worthy of memorializing. I have tried over and over again to lower this perceived barrier to blogging and failed.&lt;/p&gt;

&lt;p&gt;At the same time, I find the quick ability to favorite/like, retweet/re-broadcast, and respond on Twitter to be addicting. It is so easy to give feedback and join a conversation. As a result, I&amp;rsquo;ve probably written more, 140 characters at a time, on Twitter than I ever have on this blog.&lt;/p&gt;

&lt;p&gt;For me, Twitter is an ephemeral medium. It is about instant conversation and access. What I dump into Twitter doesn&amp;rsquo;t have any lasting power, which is why it&amp;rsquo;s so easy to toss out thoughts. Twitter is my new &lt;a href=&#34;https://en.wikipedia.org/wiki/Internet_Relay_Chat&#34;&gt;IRC&lt;/a&gt;, not a &lt;a href=&#34;https://en.wikipedia.org/wiki/Microblogging&#34;&gt;microblog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Writing on Twitter in 140 characters often seems to attract the worst in people. It&amp;rsquo;s not just #gamergate, it&amp;rsquo;s me. My ideas are more sarcastic, more acerbic, and less well considered because Twitter feels like an off the cuff conversation among friends. But it&amp;rsquo;s not a conversation among friends. It&amp;rsquo;s not really even a conversation. It&amp;rsquo;s a bunch of people shouting at each other in the same room. Twitter is less a late night dorm room debate and more the floor of the New York Stock Exchange.&lt;/p&gt;

&lt;p&gt;Which brings me to Tumblr, a service I think I finally understand. Tumblr is Twitter, but for people who take a breath before shouting. It has the same rich post types that Twitter has implemented through Cards. It has the same ability to magnify posts I find interesting through its reblogging feature. It also has the same ability to send a bit of encouragement and acknowledgement through its hearts. But Tumblr also doesn&amp;rsquo;t have the limitation of 140 characters, so I can spread my thoughts out just a bit further. And Tumblr does have a reply/conversation mechanism, but it&amp;rsquo;s just slightly “heavier” feeling than a Twitter reply so I&amp;rsquo;m less likely to just shoot off my mouth with the first thoughts that come to mind. Though Tumblr is a hosted service, it also has a fairly good API that can be used to export posts and the ability to use a custom URL. I could generate more post types on my Pelican blog, but a self-hosted blog lacks some of the social features that are just fun. And the truth is, do I really want to just put a link to a song I&amp;rsquo;m listening to right now on my blog? Is that kind of ephemera really worthy of a blog post? Maybe, but that&amp;rsquo;s not the kind of blog I want.&lt;/p&gt;

&lt;p&gt;So I am going back to Tumblr. I have been experimenting for a couple of days and I really like having a place to dump a link or a funny picture. I don&amp;rsquo;t want Tumblr to host my blog, but I do want Tumblr to eat into some of my Twitter posting. I can easily syndicate Tumblr posts over to Twitter, so why not take a little more space and &lt;em&gt;breathe&lt;/em&gt; before deciding it is worth sharing something.&lt;/p&gt;

&lt;p&gt;Please &lt;a href=&#34;http://tumblr.jsonbecker.com&#34;&gt;follow me on Tumblr&lt;/a&gt;. I think it&amp;rsquo;s going to be really fun.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cross-posted on both my &lt;a href=&#34;http://blog.jsonbecker.com&#34;&gt;blog&lt;/a&gt; and my &lt;a href=&#34;http://tumblr.jsonbecker.com&#34;&gt;Tumblr&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>News on Assertions in R</title>
      <link>http://www.json.blog/2015/07/news-on-assertions-in-r</link>
      <pubDate>Sun, 05 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2015/07/news-on-assertions-in-r</guid>
      <description>&lt;p&gt;How many times have you written R functions that start with a bunch of code that looks like this?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;my_funct &amp;lt;- function(dob, enddate = &amp;quot;2015-07-05&amp;quot;){
if (!inherits(dob, &amp;quot;Date&amp;quot;) | !inherits(enddate, &amp;quot;Date&amp;quot;)){
    stop(&amp;quot;Both dob and enddate must be Date class objects&amp;quot;)
  } 
...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Because R was designed to be interactive, it is incredibly tolerant to bad user input. Functions are not &lt;em&gt;type safe&lt;/em&gt;, meaning function arguments do not have to conform to specified data types. But most of my R code is not run interactively. I have to trust my code to run on servers on schedules or on demand as a part of production systems. So I find myself frequently writing code like the above&amp;ndash; manually writing type checks for safety.&lt;/p&gt;

&lt;p&gt;There has been some great action in the R community around &lt;em&gt;assertive programming&lt;/em&gt;, as you can see in the link. My favorite development, by far, are type-safe functions in the &lt;a href=&#34;https://github.com/smbache/ensurer&#34;&gt;ensurer package&lt;/a&gt;. The above function definition can now be written like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;my_funct &amp;lt;- function_(dob ~ Date, enddate ~ Date: as.Date(&amp;quot;2015-07-05&amp;quot;), {
  ...
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All the type-checking is done.&lt;/p&gt;

&lt;p&gt;I really like the reuse of the formula notation &lt;code&gt;~&lt;/code&gt; and the use of &lt;code&gt;:&lt;/code&gt; to indicate default values.&lt;/p&gt;

&lt;p&gt;Along with packages like &lt;a href=&#34;https://github.com/hadley/testthat&#34;&gt;testthat&lt;/a&gt;, R is really growing up and modernizing.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rhode Island Disease</title>
      <link>http://www.json.blog/2015/06/rhode-island-disease</link>
      <pubDate>Mon, 15 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2015/06/rhode-island-disease</guid>
      <description>&lt;p&gt;When discussing policy in Rhode Island, I almost always encounter two bizarre arguments.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Rhode Island is completely unique. Ideas from other places don&amp;rsquo;t adequately take into account our local context. What is working there either won&amp;rsquo;t work here or isn&amp;rsquo;t really comparable to our situation here.&lt;/li&gt;
&lt;li&gt;What is happening nationally is directly applicable to Rhode Island. We can make broad sweeping statements about a set of policies, ideas, or institutions currently in play in Rhode Island without any knowledge of how things are going locally and how it&amp;rsquo;s different from other places. We can simply graft a broader national narrative onto Rhode Island regardless of whether it makes any sense with our facts on the ground.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These seemingly in conflict points of view are often employed by the same actors.&lt;/p&gt;

&lt;p&gt;It is probably not unique to Rhode Island, but that won&amp;rsquo;t stop me from calling it &lt;strong&gt;Rhode Island Disease&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Acceptable Terms</title>
      <link>http://www.json.blog/2015/04/acceptable-terms</link>
      <pubDate>Fri, 17 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2015/04/acceptable-terms</guid>
      <description>

&lt;p&gt;An &lt;a href=&#34;http://www.gcpvd.org/2015/04/15/pawsox-providence-stadium-proposal/&#34;&gt;initial proposal&lt;/a&gt; has been made to the city of Providence and state of Rhode Island to keep the PawSox in Rhode Island and move them to a new stadium along the river in Providence.&lt;/p&gt;

&lt;p&gt;The team is proposing that they privately finance all of the construction costs of the stadium while the land remains state (or city? I am not clear) owned. The state will lease the land underneath the stadium (the real value) with an option to buy for 30 years at $1 a year. The state will also pay $5,000,000 rent for the stadium itself annually for 30 years. The PawSox will then lease back the stadium at $1,000,000 per year. The net result will be the stadium is built and Rhode Island pays the PawSox owners $4,000,000 a year for 30 years.&lt;/p&gt;

&lt;h3 id=&#34;the-good&#34;&gt;The Good&lt;/h3&gt;

&lt;p&gt;Privately financing the upfront cost of the stadium puts risks of construction delays and cost overruns on the PawSox. Already they are underestimating the cost of moving a gas line below the park grounds. Whatever the cost of construction, whatever the impact on the team of a late opening, the costs to the state are fixed. There is essentially no risk in this plan for taxpayers, defining risk as a technical term for uncertainty. We know what this deal means: $120,000,000 over 30 years.&lt;/p&gt;

&lt;p&gt;The interest rate is pretty low. Basically, although the risk is privatized, we should view this stadium as the PawSox providing the state of Rhode Island a loan of $85,000,000 which we will pay back at a rate of approximate 1.15% &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:interest&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:interest&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. Now just because the interest is low doesn&amp;rsquo;t mean we should buy&amp;hellip;&lt;/p&gt;

&lt;p&gt;The stadium design is largely attractive, even if the incorporated lighthouse is drawing ire. I don&amp;rsquo;t mind it, but I do like the idea of replacing it with an Anchor has some Greater City Providence commenters have recommended. Overall, I think the design fits with the neighborhood. It&amp;rsquo;s easy to get caught up in pretty renderings.&lt;/p&gt;

&lt;p&gt;The pedestrian bridge remains and is accessible. As someone who lives in Downcity, I am very much looking forward to this dramatic improvement to my personal transit. I think the bridge&amp;rsquo;s importance for transit is underrated, although admittedly we could make Point Street Bridge friendlier to pedestrians and bike riders instead.&lt;/p&gt;

&lt;p&gt;Brown University seems interested in hosting events, like football games, at the stadium. The plan also seems to give the state a lot of leeway in holding various events in the space when it&amp;rsquo;s not used for the baseball season. It could really be a great event space from mid-April until early November each year.&lt;/p&gt;

&lt;h3 id=&#34;the-bad&#34;&gt;The Bad&lt;/h3&gt;

&lt;p&gt;Even the team&amp;rsquo;s own economic estimates only foresee $2,000,000 in increased tax revenues. Although they claim this estimate is conservative, I would take that with a huge grain of salt. You do not lead with a plan that straight up says the taxpayers will be out $60,000,000 over 30 years unless you don&amp;rsquo;t have a better foot to put forward. I am going to go ahead and assume this estimate is about right. It&amp;rsquo;s certainly in the ballpark. (Ugh.) But what that means is that Rhode Islanders should understand this is &lt;em&gt;not an investment&lt;/em&gt;. This is not like building transit infrastructure or tax stabilization agreements to spur private construction. This deal is more akin to building schools. We do not, in fact cannot, expect that the economic impact makes this project a net positive for revenues. With $12,000,000 expected in direct spending, the project could be net positive for GDP, but even then it is obvious this is not the best annual investment to grow the economy. It is easy to come up with a laundry list of projects that cost less than this that could create more economic activity and/or more revenue to the state and city. Therefore, the project should be viewed primarily on use value. Will Rhode Islanders get $4,000,000 a year in value from the pleasure of using (and seeing) this stadium and its surrounding grounds? In school construction, we expect the benefits to be short term job creation, long term impacts on student health and well-being, ability to learn, and our ability to attract quality teachers. But most of those benefits are diffuse and hard to capture. Ultimately, we mostly support school construction because of the use benefits the kids and teachers see each year.&lt;/p&gt;

&lt;p&gt;The time line is crazy. If they&amp;rsquo;re serious about a June decision, they&amp;rsquo;re nuts. We have a complicated budget process ongoing right now. We have a teacher contract in Providence to negotiate. We have a brand new I-195 Commission trying to make their mark and get cranes in the sky. There&amp;rsquo;s no way a negotiation in good faith can be completed in 60 days unless they agree to every counter. If this is a &amp;ldquo;final best offer&amp;rdquo;, essentially, due to time line, then it is disingenuous.&lt;/p&gt;

&lt;p&gt;What happens in 30 years? We don&amp;rsquo;t have any guarantees of being whole in 30 years, and the same threats and challenges posed by the PawSox today will come up again in 30 years. Are we committed to a series of handouts until the team is of no monetary or cultural value?&lt;/p&gt;

&lt;p&gt;Other cities are likely going to come into play. The PawSox don&amp;rsquo;t have to negotiate a deal that&amp;rsquo;s fair for Rhode Island. They just have to negotiate to a deal that&amp;rsquo;s comparable to an offer they think someone else will make. Rhode Island&amp;rsquo;s position is weak, provided that anyone else is willing to make a deal.&lt;/p&gt;

&lt;h3 id=&#34;the-strange&#34;&gt;The Strange&lt;/h3&gt;

&lt;p&gt;The PawSox are asking for a 30-year property tax exemption. There&amp;rsquo;s a lot to think through here. First, there are at least two parcels that were meant to be tax generating that are a part of this plan&amp;ndash; the land Brown&amp;rsquo;s Continuing Education building currently sits on and the small develop-able parcel that was cut out from the park for a high value hotel or similar use. The stadium wants both of these parcels in addition to the park. I think City Council President Aponte is being a bit silly talking about being &amp;ldquo;made whole&amp;rdquo; over this deal, unless he&amp;rsquo;s talking about those two parcels. The park land was never going to generate city tax revenue and was actually going to cost the city money to maintain. Part of my openness to any proposal on this park land is my lack of confidence that the city will invest appropriately to maintain a world-class park space along the waterfront. There&amp;rsquo;s very little &amp;ldquo;whole&amp;rdquo; to be made.&lt;/p&gt;

&lt;p&gt;It is also possible that Providence will have to designate additional park space if the stadium is built. If that&amp;rsquo;s true and it&amp;rsquo;s coming off the tax roles than the PawSox absolutely should have to pay property taxes, period. There&amp;rsquo;s one possible exception I&amp;rsquo;ll address below&amp;hellip;&lt;/p&gt;

&lt;p&gt;I also feel very strongly about having a single process for tax stabilization across all I-195 land that is not politically driven but instead a matter of administrative decision. Exceptions for a big project breaks the major benefit of a single tax stabilization agreement ruling all the I-195 land, which is our need to send a signal that all players are equal, all developers are welcome, and political cronyism is not the path required to build. While some of those $2,000,000 in tax benefits will accrue to Providence through increased surrounding land value, many costs associated with the stadium will as well. There are police details, road wear and tear, fire and emergency services, and more to consider.&lt;/p&gt;

&lt;h3 id=&#34;my-counter&#34;&gt;My Counter&lt;/h3&gt;

&lt;p&gt;I don&amp;rsquo;t think this deal is dead, but I am not sure that the PawSox, city, or state would accept my counter. I have struggled with whether I should share what I &lt;em&gt;want&lt;/em&gt; to happen versus what I think a deal that &lt;em&gt;would&lt;/em&gt; happen looks like. I would be tempted to personally just let the PawSox walk. But if Rhode Island really wants them to stay, here&amp;rsquo;s a plausible counter:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The PawSox receive the same tax stabilization agreement all other developers get from the city of Providence. Terms for a fair valuation of the property are agreed upon up front that are derived from some portion of an average of annual revenues.&lt;/li&gt;
&lt;li&gt;The lease terms should be constructed such that the net cost (excluding the anticipated increase in tax receipts) is equal to the tax dollars owed to the city of Providence. Therefore, the state essentially pays for the $85,000,000 of principal and the city taxes. This could be through a PILOT, but I&amp;rsquo;d prefer that amount go to the PawSox and the PawSox transfer the dollars to the city. It&amp;rsquo;s just accounting, but I prefer the symbol of them paying property taxes. I don&amp;rsquo;t think it&amp;rsquo;s a terrible precedent for the state to offer PILOT payments to cover a gap between the city TSA in I-195 with a developer&amp;rsquo;s ask, if the state sees there is substantial public interest in that investment, but still better to actually get developers used to writing a check to the city.&lt;/li&gt;
&lt;li&gt;If the city has to make additional green space equivalent to the park we are losing, I foresee two options. First is the PawSox paying full load on whatever that land value is. The second is probably better, but harder to make happen. Brown should give up the Brown Stadium land to the city. They can make it into a park without reducing the foot print of taxable property in the city. If they did this, Brown should essentially get free use of the stadium with no fees (except police detail or similar that they would pay for their games on the East Side) in perpetuity. They should get first rights after the PawSox games themselves.&lt;/li&gt;
&lt;li&gt;The stadium itself will be reverted to ownership by the Rhode Island Convention Center Authority if the option to buy the land is not exercised in 30 years. This way the whole stadium and its land are state owned, since the state paid for it. The possible exception would be if Brown has to give up its stadium to park land, in which case I might prefer some arrangement be made with them.&lt;/li&gt;
&lt;li&gt;The PawSox ownership agrees to pay a large penalty to the state and the city if they move the team out of Rhode Island in the next 99 years.&lt;/li&gt;
&lt;li&gt;PawSox maintenance staff will be responsible for maintaining the Riverwalk park, stadium grounds, and the green-way that has been proposed for the I-195 district. Possible we can expand this to something like the Downcity Improvement District (or perhaps just have them pay to expand the DID into the Knowledge District). This will help ensure this creates more permanent jobs and reduces costs to the city for maintaining its public spaces that contribute to the broader attractiveness of the stadium.&lt;/li&gt;
&lt;li&gt;There should be a revenue share deal for any non-PawSox game events with the city and/or state for concession purchases and parking receipts.&lt;/li&gt;
&lt;li&gt;The stadium should not be exempt from future TIF assessments for infrastructure in the area.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I am not sure that I would pay even that much for the stadium, but this would be a far better deal overall. I can absolutely think of better ways to spend state dollars, but I also realize that the trade-off is not that simple. Rhode Island is not facing a windfall of $85,000,000 and trying to decide what to do with it. A stadium that keeps the PawSox in Rhode Island inspires emotion. The willingness to create these dollars for this purpose may be far higher than alternative uses. The correct counterfactual is not necessarily supporting 111 Westminster (a better plan for less). It is not necessarily better school buildings. It is not necessarily meaningful tax benefits for rooftop solar power. It is not lowering taxes, building a fund to provide seed capital to local startups, a streetcar, dedicated bus and/or bike lanes, or tax benefits to fill vacant properties and homes. The correct counterfactual could be nothing. It could be all of these things, but in much smaller measure. It is very hard to fully evaluate this proposal because we are not rational actors with a fixed budget line making marginal investment decisions. Ultimately, with big flashy projects like this, I lean toward evaluating them on their own merits. Typically, and I think this case is no exception, even evaluating a stadium plan on its own merits without considering alternative investments makes it clear these projects are bad deals. Yet cities and states make them over and over again. We would be wise to look at this gap in dollars and cents and our collective, repeated actions not as fits of insanity but instead as stark reminders of our inability to simply calculate the total benefits that all people receive.&lt;/p&gt;

&lt;p&gt;In my day job, I get to speak to early stage investors. There I learned an important tidbit&amp;ndash; a company can name whatever valuation they want if an investor can control the terms. That&amp;rsquo;s my feeling with the PawSox. The cash is important, it&amp;rsquo;s not nothing. But any potential plan should be judged by the terms.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s hoping Rhode Island isn&amp;rsquo;t willing to accept bad terms at a high cost.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:interest&#34;&gt;$A = P(1 + \frac{r}{n})^{nt}$ where $A = $120,000,000$, $P = $85,000,000$, $n = 1$, and $t = 30$. I&amp;rsquo;ll leave you to the algebra.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:interest&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A PostgreSQL Cheat Sheet for OSX and R</title>
      <link>http://www.json.blog/2015/01/a-postgresql-cheat-sheet-for-osx-and-r</link>
      <pubDate>Fri, 23 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2015/01/a-postgresql-cheat-sheet-for-osx-and-r</guid>
      <description>&lt;p&gt;I keep this on my desktop.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install postgresql
initdb /usr/local/var/postgres -E utf8
gem install lunchy
### Start postgres with lunchy
mkdir -p ~/Library/LaunchAgents
cp /usr/local/Cellar/postgresql/9.3.3/homebrew.mxcl.postgresql.plist ~/Library/LaunchAgents/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Setup DB from SQL file:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;### Setup DB
lunchy start postgres
created $DBNAME
psql -d $DBNAME -f &#39;/path/to/file.sql&#39;
lunchy stop postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Starting and Stopping PostgreSQL&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;lunchy start postgres
lunchy stop postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;may run into trouble with local socket… try this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rm /usr/local/var/postgres/postmaster.pid
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Connecting with R&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# make sure lunch start postgres in terminal first)
require(dplyr)
db &amp;lt;- src_postgres(dbname=$DBNAME)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Inspired by seeing &lt;a href=&#34;http://altons.github.io/r/2015/01/22/an-easy-way-of-installing-rpostgresql-on-mac/&#34;&gt;this post&lt;/a&gt; and thought I should toss out what I do.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Taking Control</title>
      <link>http://www.json.blog/2015/01/taking-control</link>
      <pubDate>Sun, 11 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://www.json.blog/2015/01/taking-control</guid>
      <description>

&lt;h2 id=&#34;severing-my-daemon&#34;&gt;Severing My Daemon&lt;/h2&gt;

&lt;p&gt;When I was in high school, I piggy-backed on a friend&amp;rsquo;s website to host a page for my band. We could post pictures, show locations and dates, lyrics, and pretend like we produced music people cared about. It was mostly a fun way for me to play with the web and something to show folks when I said I played guitar and sang in a band. One day, my friend canceled his hosting. He wasn&amp;rsquo;t using his site for anything and he forgot that I had been using the site. I was 18, I never thought about backups, and I had long deleted all those pesky photos taking up space on my memory cards and small local hard drive.&lt;/p&gt;

&lt;p&gt;Four years of photos from some of the best experiences of my life are gone. No one had copies. Everyone was using the site. In the decade since, no set of pictures has ever been as valuable as the ones I lost that day.&lt;/p&gt;

&lt;h2 id=&#34;who-controls-the-past&#34;&gt;Who controls the past&amp;hellip;&lt;/h2&gt;

&lt;p&gt;As you can imagine, this loss has had a profound effect on how I think about both my data and the permanence of the internet. Today, I have a deep system of backups for any digital data I produce, and I am far more likely to err on keeping data than discarding it. Things still sometimes go missing. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:stage&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:stage&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Perhaps the more lasting impact is my desire to maintain some control over all of my data. I use &lt;a href=&#34;http://www.fastmail.fm/?STKI=11467093&#34;&gt;Fastmail&lt;/a&gt; for my email, even after over 10 years of GMail use. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:early&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:early&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; I like knowing that I am storing some of my most important data in a standard way that easily syncs locally and backs up. I like that I pay directly for such an important service so that all of the incentive for my email provider is around making email work better for me. I am the customer. I use &lt;a href=&#34;http://www.getsync.com&#34;&gt;Bittorrent Sync&lt;/a&gt; for a good chunk of my data. I want redundancy across multiple machines and syncing, but I don&amp;rsquo;t want all of my work and all of my data to depend on being on a third party server like it is with Dropbox. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:db&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:db&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;. I also use a &lt;a href=&#34;http://www.esn.fm/sponsors/&#34;&gt;Transporter&lt;/a&gt; so that some of my files are stored on a local hard drive.&lt;/p&gt;

&lt;h2 id=&#34;raison-d-être&#34;&gt;Raison D&amp;rsquo;être&lt;/h2&gt;

&lt;p&gt;Why does this blog exist? I have played with &lt;a href=&#34;http://tumblr.jsonbecker.com&#34;&gt;Tumblr&lt;/a&gt; in the past and I like its social and discovery tools, but I do not like the idea of pouring my thoughts into someone else&amp;rsquo;s service with no guarantee of easy or clean exit. I tried using Wordpress on a self-hosted blog for a while, but I took one look at the way my blog posts were being stored in the Wordpress database and kind of freaked out. All those convenient plugins and short codes were transforming the way my actual text was stored in hard to recover way. Plus, I didn&amp;rsquo;t really understand how my data was stored well enough to be comfortable I had solid back ups. I don&amp;rsquo;t want to lose my writing like I lost those pictures.&lt;/p&gt;

&lt;p&gt;This blog exists, built on &lt;a href=&#34;http://www.getpelican.com&#34;&gt;Pelican&lt;/a&gt;, because I needed to a place to write my thoughts in plain text that was as easy to back up as it was to share with the world. I don&amp;rsquo;t write often, and I feel I rarely write the &amp;ldquo;best&amp;rdquo; of my thoughts, but if I am going to take the time to put something out in the world I want to be damn sure that I control it.&lt;/p&gt;

&lt;h2 id=&#34;bag-end&#34;&gt;Bag End&lt;/h2&gt;

&lt;p&gt;I recently began a journey that I thought was about simplifying tools. I began using &lt;code&gt;vim&lt;/code&gt; a lot more for text editing, including writing prose like this post. But I quickly found that my grasping for new ways to do work was less about simplifying and more about better control. I want to be able to work well, with little interruption, on just about any computer. I don&amp;rsquo;t want to use anything that&amp;rsquo;s overly expensive or available only on one platform if I can avoid it. I want to strip away dependencies as much as possible. And while much of what I already use is free software, I didn&amp;rsquo;t feel like I was in &lt;em&gt;control&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;For example, &lt;code&gt;git&lt;/code&gt; has been an amazing change for how I do all my work since about 2011. Github is a major part of my daily work and has saved me a bunch of money by allowing me to host this site for free. But I started getting frustrated with limitations of not having an actual server and not really having access to the power and control that a real server provides. So I recently moved this site off of Github and on to a &lt;a href=&#34;https://www.digitalocean.com/?refcode=7377c1fcbe67&#34;&gt;Digital Ocean&lt;/a&gt; droplet. This is my first experiment with running a Linux VPS. Despite using desktop Linux for four years full time, I have never administered a server. It feels like a skill I should have and I really like the control.&lt;/p&gt;

&lt;h2 id=&#34;quentin-s-land&#34;&gt;Quentin&amp;rsquo;s Land&lt;/h2&gt;

&lt;p&gt;This whole blog is about having a place I control where I can write things. I am getting better at the control part, but I really need to work on the writing things part.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s what I hope to do in the next few months. I am going to choose (or write) a new theme for the site that&amp;rsquo;s responsive and has a bit more detail. I am probably going to write a little bit about the cool, simple things I learned about &lt;code&gt;nginx&lt;/code&gt; and how moving to my own server is helping me run this page (and other experiments) with a lot more flexibility. I am also going to try and shift some of my writing from tweetstorms to short blog posts. If I am truly trying to control my writing, I need to do a better job of thinking out loud in this space versus treating them as disposable and packing them on to Twitter. I will also be sharing more code snippets and ideas and less thoughts on policy and local (Rhode Island) politics. The code/statistics/data stuff feels easier to write and has always gotten more views and comments.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s the plan for 2015. Time to execute.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:stage&#34;&gt;I recently found some rare music missing that I had to retrieve through some heroic efforts that included [Archive.org]() and stalking someone from an online forum that no longer exists (successfully).
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:stage&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:early&#34;&gt;I was a very early adopter of Gmail.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:early&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:db&#34;&gt;I still use Dropbox. I&amp;rsquo;m not an animal. But I like having an alternative.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:db&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>